Resources:
  OCRStageUserPool:
    Type: 'AWS::Cognito::UserPool'
    Properties:
      UserPoolName: ocr-stage-user-pool
      AutoVerifiedAttributes:
        - email

  OCRStageUserPoolClient:
    Type: 'AWS::Cognito::UserPoolClient'
    Properties:
      ClientName: stg-client
      UserPoolId: !Ref OCRStageUserPool
      GenerateSecret: true

  OCRFunctionStg:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ocr/
      Policies:
        - CloudWatchLogsFullAccess
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Timeout: 60
      PackageType: Zip
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          STAGE: !Ref Stage
      Architectures:
        - x86_64
      Events:
        OCRStg:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref MyApi
            Auth:
              Authorizer: StgCognitoAuthorizer

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MyApi
      StageName: prod
      Auth:
        Authorizers:
          StgCognitoAuthorizer:
            UserPoolArn: !GetAtt OCRStageUserPool.Arn
            Identity:
              Header: Authorization

Outputs:
  OCRStgApi:
    Description: API Gateway endpoint URL for stage for OCR function
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
  OCRFunction:
    Description: OCR Lambda Function ARN
    Value: !GetAtt OCRFunctionStg.Arn
  OCRFunctionIamRole:
    Description: Implicit IAM Role created for OCR function
    Value: !GetAtt LambdaExecutionRole.Arn
